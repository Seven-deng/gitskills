// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

//option go_package = "google.golang.org/grpc/examples/helloworld/helloworld";
//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";

package getscore;

// The greeting service definition.
service HuScore {
  // Sends a greeting
  rpc CheckHuType (CardInfo) returns (checkTypeScore) {}

}

// The request message containing the user's name.
message CardInfo {
  map<int64,int32>   typeMapAll =1;
  int32  tilesNum = 2;
  repeated int64 discards = 3;
  repeated int64 handCards = 4;
  repeated int64 surplusCards = 5;
  repeated int64 otherHands = 6;
  repeated int64 chowCards = 7;
  repeated int64 pongCards = 8;
  repeated int64 mingKong = 9;
  repeated int64 anKong = 10;
  bool isBanker = 11;
  bool isZimo = 12;
  bool robKong = 13;
  bool lastOptIsKong = 14;
  bool lastCard_cpk = 15;
  int64 lastCard = 16;
  int64 tableFeng = 17;
  int64 menFeng = 18;

}

// The response message containing the greetings
message checkTypeScore {
  map<int64,int32> message= 1;
}

